<!DOCTYPE html>
<html lang="en">
<%- include('partials/head', { title: 'WhatsApp Numbers' }) %>
<body class="bg-gray-50 dark:bg-gray-900" x-data="{ darkMode: localStorage.getItem('darkMode') === 'true' }" :class="{ 'dark': darkMode }">
    <%- include('partials/nav', { path: '/numbers', user: locals.user }) %>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" x-data="numbersManager()">
        <!-- Page Header -->
        <div class="mb-8 flex justify-between items-center">
            <div>
                <h1 class="text-2xl font-bold text-gray-900 dark:text-white">WhatsApp Numbers</h1>
                <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">Manage your WhatsApp bot instances</p>
            </div>
            <button 
                @click="showAddModal = true"
                class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
            >
                <i class="fas fa-plus mr-2"></i>
                Add Number
            </button>
        </div>

        <!-- Numbers Grid -->
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
            <template x-for="number in numbers" :key="number.id">
                <div class="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg">
                    <div class="p-6">
                        <!-- Header -->
                        <div class="flex justify-between items-start">
                            <div>
                                <h3 class="text-lg font-medium text-gray-900 dark:text-white" x-text="number.name"></h3>
                                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400" x-text="number.phoneNumber"></p>
                            </div>
                            <div class="relative" x-data="{ open: false }">
                                <button 
                                    @click="open = !open"
                                    class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none"
                                >
                                    <i class="fas fa-ellipsis-v text-gray-400"></i>
                                </button>
                                <div 
                                    x-show="open"
                                    @click.away="open = false"
                                    class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 dark:divide-gray-700"
                                >
                                    <div class="py-1">
                                        <button 
                                            @click="editNumber(number)"
                                            class="group flex items-center px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 w-full text-left"
                                        >
                                            <i class="fas fa-edit mr-3 text-gray-400 group-hover:text-gray-500"></i>
                                            Edit
                                        </button>
                                    </div>
                                    <div class="py-1">
                                        <button 
                                            @click="deleteNumber(number)"
                                            class="group flex items-center px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700 w-full text-left"
                                        >
                                            <i class="fas fa-trash-alt mr-3"></i>
                                            Delete
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Status -->
                        <div class="mt-4">
                            <div class="flex items-center">
                                <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Status:</span>
                                <span 
                                    class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium"
                                    :class="{
                                        'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300': number.isConnected,
                                        'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300': !number.isConnected
                                    }"
                                >
                                    <i class="fas fa-circle text-xs mr-1"></i>
                                    <span x-text="number.isConnected ? 'Connected' : 'Disconnected'"></span>
                                </span>
                            </div>
                        </div>

                        <!-- QR Code (if not connected) -->
                        <template x-if="!number.isConnected && number.qrCode">
                            <div class="mt-4">
                                <div class="bg-white dark:bg-gray-700 p-4 rounded-lg">
                                    <img :src="number.qrCode" alt="QR Code" class="w-full">
                                    <p class="mt-2 text-xs text-center text-gray-500 dark:text-gray-400">
                                        Scan with WhatsApp to connect
                                    </p>
                                </div>
                            </div>
                        </template>

                        <!-- Stats -->
                        <div class="mt-4 grid grid-cols-2 gap-4">
                            <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-lg">
                                <div class="text-sm font-medium text-gray-500 dark:text-gray-400">Messages Sent</div>
                                <div class="mt-1 text-lg font-semibold text-gray-900 dark:text-white" x-text="number.stats?.sent || 0"></div>
                            </div>
                            <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-lg">
                                <div class="text-sm font-medium text-gray-500 dark:text-gray-400">Messages Received</div>
                                <div class="mt-1 text-lg font-semibold text-gray-900 dark:text-white" x-text="number.stats?.received || 0"></div>
                            </div>
                        </div>

                        <!-- Actions -->
                        <div class="mt-6 flex space-x-3">
                            <template x-if="!number.isConnected">
                                <button 
                                    @click="connectNumber(number)"
                                    class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                                >
                                    <i class="fas fa-plug mr-2"></i>
                                    Connect
                                </button>
                            </template>
                            <template x-if="number.isConnected">
                                <button 
                                    @click="disconnectNumber(number)"
                                    class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                                >
                                    <i class="fas fa-power-off mr-2"></i>
                                    Disconnect
                                </button>
                            </template>
                        </div>
                    </div>
                </div>
            </template>
        </div>

        <!-- Add Number Modal -->
        <div 
            x-show="showAddModal" 
            class="fixed z-10 inset-0 overflow-y-auto" 
            aria-labelledby="modal-title" 
            role="dialog" 
            aria-modal="true"
        >
            <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
                <div 
                    x-show="showAddModal"
                    x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="ease-in duration-200"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0"
                    class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"
                    @click="showAddModal = false"
                ></div>

                <div class="inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
                    <div class="sm:flex sm:items-start">
                        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-green-100 dark:bg-green-900 sm:mx-0 sm:h-10 sm:w-10">
                            <i class="fas fa-phone text-green-600 dark:text-green-400"></i>
                        </div>
                        <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                            <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white" id="modal-title">
                                Add WhatsApp Number
                            </h3>
                            <div class="mt-4">
                                <form @submit.prevent="addNumber">
                                    <!-- Phone Number -->
                                    <div>
                                        <label for="phoneNumber" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                                            Phone Number
                                        </label>
                                        <div class="mt-1">
                                            <input 
                                                type="text" 
                                                name="phoneNumber" 
                                                id="phoneNumber" 
                                                x-model="newNumber.phoneNumber"
                                                class="shadow-sm focus:ring-green-500 focus:border-green-500 block w-full sm:text-sm border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white"
                                                placeholder="+1234567890"
                                                required
                                            >
                                        </div>
                                    </div>

                                    <!-- Name -->
                                    <div class="mt-4">
                                        <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                                            Name
                                        </label>
                                        <div class="mt-1">
                                            <input 
                                                type="text" 
                                                name="name" 
                                                id="name" 
                                                x-model="newNumber.name"
                                                class="shadow-sm focus:ring-green-500 focus:border-green-500 block w-full sm:text-sm border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white"
                                                placeholder="Bot Name"
                                            >
                                        </div>
                                    </div>

                                    <!-- Description -->
                                    <div class="mt-4">
                                        <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                                            Description
                                        </label>
                                        <div class="mt-1">
                                            <textarea 
                                                name="description" 
                                                id="description" 
                                                x-model="newNumber.description"
                                                rows="3"
                                                class="shadow-sm focus:ring-green-500 focus:border-green-500 block w-full sm:text-sm border-gray-300 dark:border-gray-600 rounded-md dark:bg-gray-700 dark:text-white"
                                                placeholder="Optional description"
                                            ></textarea>
                                        </div>
                                    </div>

                                    <!-- Buttons -->
                                    <div class="mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense">
                                        <button 
                                            type="submit"
                                            class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:col-start-2 sm:text-sm"
                                            :disabled="loading"
                                        >
                                            <template x-if="!loading">Add Number</template>
                                            <template x-if="loading">
                                                <div class="flex items-center">
                                                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                                    </svg>
                                                    Processing...
                                                </div>
                                            </template>
                                        </button>
                                        <button 
                                            type="button"
                                            class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:mt-0 sm:col-start-1 sm:text-sm"
                                            @click="showAddModal = false"
                                        >
                                            Cancel
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Numbers Manager Script -->
    <script>
        function numbersManager() {
            return {
                numbers: <%- JSON.stringify(numbers || []) %>,
                showAddModal: false,
                loading: false,
                newNumber: {
                    phoneNumber: '',
                    name: '',
                    description: ''
                },

                async addNumber() {
                    this.loading = true;
                    try {
                        const response = await fetch('/api/numbers', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(this.newNumber)
                        });

                        const data = await response.json();
                        if (data.error) {
                            throw new Error(data.error);
                        }

                        this.numbers.push(data.number);
                        this.showAddModal = false;
                        this.newNumber = { phoneNumber: '', name: '', description: '' };

                        // Show success notification
                        this.$dispatch('notify', {
                            type: 'success',
                            message: 'Number added successfully'
                        });
                    } catch (error) {
                        // Show error notification
                        this.$dispatch('notify', {
                            type: 'error',
                            message: error.message || 'Error adding number'
                        });
                    } finally {
                        this.loading = false;
                    }
                },

                async connectNumber(number) {
                    try {
                        const response = await fetch(`/api/numbers/${number.id}/connect`, {
                            method: 'POST'
                        });

                        const data = await response.json();
                        if (data.error) {
                            throw new Error(data.error);
                        }

                        // Show success notification
                        this.$dispatch('notify', {
                            type: 'success',
                            message: 'Connection initiated'
                        });

                        // Refresh page after 2 seconds to show QR code
                        setTimeout(() => window.location.reload(), 2000);
                    } catch (error) {
                        // Show error notification
                        this.$dispatch('notify', {
                            type: 'error',
                            message: error.message || 'Error connecting number'
                        });
                    }
                },

                async disconnectNumber(number) {
                    try {
                        const response = await fetch(`/api/numbers/${number.id}/disconnect`, {
                            method: 'POST'
                        });

                        const data = await response.json();
                        if (data.error) {
                            throw new Error(data.error);
                        }

                        number.isConnected = false;

                        // Show success notification
                        this.$dispatch('notify', {
                            type: 'success',
                            message: 'Number disconnected successfully'
                        });
                    } catch (error) {
                        // Show error notification
                        this.$dispatch('notify', {
                            type: 'error',
                            message: error.message || 'Error disconnecting number'
                        });
                    }
                },

                async deleteNumber(number) {
                    if (!confirm('Are you sure you want to delete this number?')) {
                        return;
                    }

                    try {
                        const response = await fetch(`/api/numbers/${number.id}`, {
                            method: 'DELETE'
                        });

                        const data = await response.json();
                        if (data.error) {
                            throw new Error(data.error);
                        }

                        this.numbers = this.numbers.filter(n => n.id !== number.id);

                        // Show success notification
                        this.$dispatch('notify', {
                            type: 'success',
                            message: 'Number deleted successfully'
                        });
                    } catch (error) {
                        // Show error notification
                        this.$dispatch('notify', {
                            type: 'error',
                            message: error.message || 'Error deleting number'
                        });
                    }
                }
            };
        }
    </script>
</body>
</html>
